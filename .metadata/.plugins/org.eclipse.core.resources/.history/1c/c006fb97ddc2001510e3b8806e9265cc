package ar.com.templateit.ecommerce.action;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import org.apache.struts2.ServletActionContext;
import org.tempuri.Articulo;
import org.tempuri.Service1Soap;

import ar.com.templateit.cds.web.service.Categoria;
import ar.com.templateit.cds.web.service.CategoriaService;
import ar.com.templateit.cds.web.service.Producto;
import ar.com.templateit.cds.web.service.ProductoService;
import ar.com.templateit.ecommerce.assembler.ProductoAssembler;
import ar.com.templateit.ecommerce.dto.CategoriaDTO;
import ar.com.templateit.ecommerce.dto.DetallePedidoDTO;
import ar.com.templateit.ecommerce.dto.ProductoDTO;

import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;

public class ProductoAction extends ActionSupport{

	private static final long serialVersionUID = -3760366151978971632L;
	private String descripcion;
	private List<ProductoDTO> productosDTO;
	private List<DetallePedidoDTO> detallePedidoDTO;
	private BigDecimal totalVenta;
	private Service1Soap service1Soap;
	private String idCategoria;
	private ProductoService productoService;
	private CategoriaService categoriaService;
	
	public String search() {
		
		Map<Integer, String> imgMap = (Map<Integer, String>)ActionContext.getContext().getSession().get("imgMap");
		List<CategoriaDTO> categorias = (List<CategoriaDTO>)ActionContext.getContext().getSession().get("categoriasDTO");
		
		List<Producto> productosTmp = new ArrayList<Producto>();
		this.productosDTO = new ArrayList<ProductoDTO>();
		
		if(!this.idCategoria.isEmpty()){
			Categoria categoria = this.categoriaService.getCategoria(new Long(this.idCategoria));
			productosTmp = this.productoService.findByCriteria(null, null, null, categoria);
			
		}
		else{
			productosTmp = this.productoService.findByCriteria(null, null, this.descripcion.trim(), null);
		}
		
		
//		EcommerceUtil eu = new EcommerceUtil();
//		this.productosDTO = eu.getProductos();

		//TODO:Quitar comentarios
		ProductoAssembler productoAssembler = new ProductoAssembler();
		String pathImage="";
		for(Producto producto : productosTmp){
			for(CategoriaDTO cat : categorias){
				if(cat.getId().intValue() ==articulo.getIdCategoria()){
					for (Entry<Integer, String> e: imgMap.entrySet()) {
				        if(articulo.getIdArticulo()==e.getKey().intValue()){
							  pathImage = e.getValue();
							  break;
						}
				    }
					this.productosDTO.add(productoAssembler.getData(articulo,cat,pathImage));
				}
			}
		}
		
		ActionContext.getContext().getSession().put("productosDTO", this.productosDTO);
				
		return "search";
	}
	
		
	public String agregarAlCarrito() {
		this.totalVenta = (BigDecimal)ActionContext.getContext().getSession().get("totalVenta");
		this.detallePedidoDTO = (List<DetallePedidoDTO>)ActionContext.getContext().getSession().get("detallePedidoDTO");
		
		String id = ServletActionContext.getRequest().getParameter("id");
		String cantidad = ServletActionContext.getRequest().getParameter("cantidad");
		
		//Buscar el producto por id desde el webservice
		this.productosDTO = (List<ProductoDTO>)ActionContext.getContext().getSession().get("productosDTO");
		
				
		for(ProductoDTO producto : this.productosDTO){
			if(producto.getId().intValue()== Integer.parseInt(id)){
				DetallePedidoDTO detallePedido = new DetallePedidoDTO();
				detallePedido.setId(producto.getId());
				detallePedido.setDescripcion(producto.getDescripcion());
				detallePedido.setCantidad(Integer.valueOf(cantidad));
				detallePedido.setPrecio(producto.getPrecio());
				detallePedido.setSubTotal(producto.getPrecio().multiply(new BigDecimal(Integer.parseInt(cantidad))));
				
				this.detallePedidoDTO.add(detallePedido);	
				
				BigDecimal precioCantidad = producto.getPrecio().multiply(new BigDecimal(Integer.parseInt(cantidad)));
				
				this.totalVenta = this.totalVenta.add(precioCantidad);
			}
		}
			
		ActionContext.getContext().getSession().put("detallePedidoDTO", this.detallePedidoDTO);
		ActionContext.getContext().getSession().put("totalVenta", totalVenta);
		
		
		return "refreshItems";
	}
	
	public String eliminarDelCarrito() {
		
		this.detallePedidoDTO = (List<DetallePedidoDTO>)ActionContext.getContext().getSession().get("detallePedidoDTO");
		String index = ServletActionContext.getRequest().getParameter("index");
		
		this.totalVenta = (BigDecimal)ActionContext.getContext().getSession().get("totalVenta");
		BigDecimal precioCantidad = this.detallePedidoDTO.get(Integer.parseInt(index)).getPrecio().multiply(
				                      new BigDecimal(this.detallePedidoDTO.get(Integer.parseInt(index)).getCantidad().intValue()));  
		this.totalVenta = this.totalVenta.subtract(precioCantidad);
						
		this.detallePedidoDTO.remove(Integer.parseInt(index));
				
		ActionContext.getContext().getSession().put("detallePedidoDTO", this.detallePedidoDTO);
		ActionContext.getContext().getSession().put("totalVenta", this.totalVenta);
		
		return "refreshItems";
	}
	
	
	public String vaciarCarrito() {
		this.detallePedidoDTO = (List<DetallePedidoDTO>)ActionContext.getContext().getSession().get("detallePedidoDTO");
		this.detallePedidoDTO.clear();
				
		ActionContext.getContext().getSession().put("detallePedidoDTO", this.detallePedidoDTO);
		ActionContext.getContext().getSession().put("totalVenta", new BigDecimal("0.00"));
		
		return "refreshItems";
	}

	
	
	public String getDescripcion() {
		return descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	public List<ProductoDTO> getProductosDTO() {
		return productosDTO;
	}

	public void setProductosDTO(List<ProductoDTO> productosDTO) {
		this.productosDTO = productosDTO;
	}
	
	
	public List<DetallePedidoDTO> getDetallePedidoDTO() {
		return detallePedidoDTO;
	}


	public void setDetallePedidoDTO(List<DetallePedidoDTO> detallePedidoDTO) {
		this.detallePedidoDTO = detallePedidoDTO;
	}


	public BigDecimal getTotalVenta() {
		return totalVenta;
	}

	public void setTotalVenta(BigDecimal totalVenta) {
		this.totalVenta = totalVenta;
	}

	public void setService1Soap(Service1Soap service1Soap) {
		this.service1Soap = service1Soap;
	}

	public String getIdCategoria() {
		return idCategoria;
	}

	public void setIdCategoria(String idCategoria) {
		this.idCategoria = idCategoria;
	}


	public void setProductoService(ProductoService productoService) {
		this.productoService = productoService;
	}


	public void setCategoriaService(CategoriaService categoriaService) {
		this.categoriaService = categoriaService;
	}
	
	
	

}
